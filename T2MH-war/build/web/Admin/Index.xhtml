<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition template="../Template/Admin/Template.xhtml"
                xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://xmlns.jcp.org/jsf/html"
                xmlns:f="http://xmlns.jcp.org/jsf/core"
                xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
                xmlns:p="http://primefaces.org/ui">
    <ui:define name="content">
        <f:metadata>
            <f:viewAction action="#{chartView.reloadPage()}"/>
        </f:metadata>
        <p:growl id="loginMessage" autoUpdate="true" showDetail="true" escape="false" globalOnly="true" sticky="true"/>
        <p:ajaxStatus onstart="PF('statusDialog').show()" onsuccess="PF('statusDialog').hide()" />
        <p:dialog widgetVar="statusDialog" modal="true" draggable="false" closable="false" resizable="false" showHeader="false">
            <p:graphicImage value="/Images/Icons/ajaxloadingbar.gif"/>
        </p:dialog>
        <h:body>
            <style>
                .column1{
                    width: 400px;
                }
                .column2{

                }
            </style>
            <h:form id="formChart">
                <p:panelGrid columns="3" styleClass="innerpanelgrid" columnClasses="column1,column2" class="noBorderPanelGrid" style="margin: 45px;align-items: center;align-content: center;">

                    <p:outputLabel for="typeRender" value="Choose Type Report: " style="font-weight:bold;" />
                    <p:selectOneListbox id="typeRender" value="#{chartView.typeReport}" required="true" valueChangeListener="#{chartView.chooseTypeReportListener}">
                        <f:selectItem  itemLabel="Performance Of System" itemValue="system"/>
                        <f:selectItem  itemLabel="Performance Of Branch" itemValue="branch" />
                        <p:ajax update="@form,btnRenderChart" />
                    </p:selectOneListbox><p/>

                    <p:outputLabel for="typeOutput" value="Choose Type Of Output: " style="font-weight:bold;" />
                    <p:selectOneListbox id="typeOutput" value="#{chartView.typeOutput}" required="true" valueChangeListener="#{chartView.chooseTypeOutputListener}">
                        <f:selectItem  itemLabel="Output Category" itemValue="cate"/>
                        <f:selectItem  itemLabel="Output Groups" itemValue="group" />
                        <p:ajax update="@form,btnRenderChart" />
                    </p:selectOneListbox><p/>

                    <p:outputLabel for="typeCalculator" value="Calculator Only Selected Groups: " style="font-weight:bold;" />
                    <p:selectOneListbox id="typeCalculator" value="#{chartView.typeCalculator}" required="true" valueChangeListener="#{chartView.chooseTypeCalculatorListener}">
                        <f:selectItem  itemLabel="Yes" itemValue="yes"/>
                        <f:selectItem  itemLabel="No" itemValue="no" />
                        <p:ajax update="@form,btnRenderChart" />
                    </p:selectOneListbox><p/>

                    <p:outputLabel for="listCategory" value="Choose Category To Analysis:" style="font-weight:bold;" />
                    <p:selectManyButton id="listCategory" value="#{chartView.listChooseCategory}" >
                        <f:selectItems var="itemCate" value="#{chartView.allCategory}" itemLabel="[#{itemCate.cateID}] #{itemCate.cateName}" itemValue="#{itemCate.cateID}"/>  
                        <p:ajax event="change"  update="@form" listener="#{chartView.onCategoryChange()}"/>
                        <p:ajax  update="@form"/>
                    </p:selectManyButton>
                    <p:outputLabel/>


                    <p:outputLabel for="listGroup" value="Choose Groups To Analysis:" style="font-weight:bold;" />
                    <p:selectManyButton id="listGroup" value="#{chartView.listChooseGroups}" >
                        <f:selectItems var="itemGroup" value="#{chartView.allGroups}" itemLabel="[#{itemGroup.getcID()}] #{itemGroup.groupName}" itemValue="#{itemGroup.groupID}"   />  
                        <p:ajax event="change"  update="@form" listener="#{chartView.onGroupChange()}"/>
                        <p:ajax  update="@form"/>
                    </p:selectManyButton>
                    <p:outputLabel/>


                    <p:outputLabel for="idBranch" value="Enter Branch ID :" style="font-weight:bold;" rendered="#{chartView.typeReport eq 'branch'}"/>
                    <p:inputNumber id="idBranch" value="#{chartView.inputBranchID}" rendered="#{chartView.typeReport eq 'branch'}" minValue="0" maxValue="10000000000" emptyValue="0">
                        <p:keyFilter regEx="/[0-9]/i"/>
                        <f:validateDoubleRange minimum="0" maximum="10000000000"/>
                        <p:ajax listener="#{chartView.checkInputBrachID()}" rendered="#{chartView.typeReport eq 'branch'}" update="@form"/>
                    </p:inputNumber>
                    <p:outputLabel rendered="#{chartView.typeReport eq 'branch'}"/>

                    <p:outputLabel for="dateTimeStart" value="Choose First Date:" style="font-weight:bold;"/>
                    <p:calendar id="dateTimeStart" required="true" value="#{chartView.firstDate}"  pattern="dd/MM/yyyy" readonlyInput="true" navigator="true"
                                showTodayButton="false" maxdate="#{chartView.returnMaxDate()}"
                                showOn="button">
                        <p:ajax listener="#{chartView.onFirstDateSelect}" event="dateSelect" update="@form"/>
                        <p:ajax update="@form"/>
                    </p:calendar><p/>

                    <p:outputLabel for="dateTimeEnd" value="Choose Second Date:" style="font-weight:bold;"/>
                    <p:calendar id="dateTimeEnd" required="true" value="#{chartView.secondDate}"  pattern="dd/MM/yyyy" readonlyInput="true" navigator="true" 
                                showTodayButton="false" maxdate="#{chartView.returnMaxDate()}"
                                showOn="button">
                        <p:ajax listener="#{chartView.onSecondDateSelect}" event="dateSelect" update="@form"/>
                        <p:ajax update="@form"/>
                    </p:calendar><p/>


                </p:panelGrid>
                <p:commandButton type="button" value="Render Chart" icon="fa fa-bar-chart" process="@this" id="btnRenderChart"
                                 rendered="#{chartView.firstDate ne null and chartView.secondDate ne null and ((chartView.typeReport eq 'branch' and chartView.branch ne null) or chartView.typeReport ne 'branch') and chartView.typeReport ne null and chartView.typeOutput ne null and chartView.typeCalculator ne null 
                                             and ((chartView.typeCalculator eq 'yes' and chartView.lengthOfLGC gt 1) or (chartView.typeCalculator eq 'no' and chartView.lengthOfLCC gt 1)) 
                                            }">
                    <p:ajax event="click" listener="#{chartView.setIsShow(true)}" update="@form" />
                </p:commandButton>
                <p:outputPanel id="renderChart"  rendered="#{chartView.isShow}" autoUpdate="true" style="margin: auto;align-items: center;align-content: center;">
                    <p:chart type="pie" model="#{chartView.pieModel}" style="height: 700px;margin: auto;align-items: center;align-content: center;" id="chart_chart" widgetVar="chart_export"/>
                </p:outputPanel>
                <p:commandButton type="button" value="Export" icon="ui-icon-extlink" onclick="exportChart()" style="margin-top: 20px;" rendered="#{chartView.isShow}"/>
                <p:dialog widgetVar="dialogExport" id="dialogExport" showEffect="fade" modal="true"
                          style="margin: auto;align-content: center;text-align: left;align-items: center;" >

                    <p:outputPanel id="allContent" style="text-align: center;width:  1654px;height:auto;align-items: center;align-content: center;">
                        <style>
                            .ui-panelgrid-content.ui-widget-content.ui-grid.ui-grid-responsive{
                                border: none;
                            }
                            .column1{
                                width: 300px;
                                text-align: right;
                            }
                            .column2{
                                margin: auto;
                                text-align: left;
                                margin-left: 30px;
                            }
                            .ui-outputpanel.ui-widget{
                                text-align: left;
                            }
                        </style>
                        <p:outputPanel style="margin: 45px;text-align: center;">
                            <h:outputText value="Data Analysis" style="text-align: center;font-weight: bold;color: #ff6666;font-size: 30px;padding: 30px;margin-top: 30px;margin-bottom: 30px;"/><br/>

                            <h:outputText value="System Performance" style="text-align: center;font-weight: bold;color: #66512c;font-size: 20px;padding: 30px;margin-top: 30px;margin-bottom: 30px;"
                                          rendered="#{chartView.typeReport eq 'system'}"/>
                            <h:outputText value="Branch [#{chartView.branch.branchID}] Performance" style="text-align: center;font-weight: bold;color: #66512c;font-size: 20px;padding: 30px;margin-top: 30px;margin-bottom: 30px;"
                                          rendered="#{chartView.typeReport eq 'branch'}"/>
                            <p:separator/><br/>
                        </p:outputPanel>

                        <p:outputPanel layout="grid" style="margin: 45px;text-align: center;">                 
                            <style>
                                .ui-panel.ui-widget.ui-widget-content.ui-corner-all{
                                    border: none;
                                }
                            </style><br/>
                            <p:outputLabel for="empId" value="Employee: " style="font-weight:bold;text-align: left;" />                    
                            <h:outputText id="empId" value="#{adminLogin.employee.employeeID} - #{adminLogin.employee.employeeInfo.employeeName}" style="font-weight: bold;color: #ff6666;" />  <p/>

                            <p:outputLabel for="dateCreate" value="Date Create: " style="font-weight:bold;text-align: left;" />                    
                            <h:outputText id="dateCreate" value="#{chartView.outputDateCreate()}" />  <p/>

                            <p:outputLabel for="period" value="Period: " style="font-weight:bold;text-align: left;" />                    
                            <h:outputText id="period" value="#{chartView.outputFirstDate(chartView.firstDate)} To #{chartView.outputSecondDate(chartView.secondDate)}" />  <p/>

                            <p:outputLabel for="totalValue" value="Total Value: " style="font-weight:bold;text-align: left;" />                    
                            <h:outputText id="totalValue" value="#{chartView.returnTotalAmount(hmNameValue)}" /><h:outputText value=" VND" style="font-weight: bold;text-align: left;" />  <p/>

                            <p:outputLabel  value="Category Report"  style="font-weight:bold;color: #25AAE1;text-align: left;" rendered="#{chartView.typeOutput eq 'cate'}"/>
                            <p:outputLabel rendered="#{chartView.typeOutput eq 'cate'}"/> 

                            <p:outputLabel  value="Groups Report"  style="font-weight:bold;color: #25AAE1;text-align: left;" rendered="#{chartView.typeOutput eq 'group'}"/>
                            <p:outputLabel rendered="#{chartView.typeOutput eq 'group'}" /> 

                            <p/>

                            <p:outputLabel value="Category ID: " for="listCateID" style="font-weight: bold;" />
                            <ui:repeat id="listCateID" var="idCate" value="#{chartView.returnIdOfListCateChoose(chartView.listChooseCategory)}" varStatus="status">
                                <h:outputText value="[#{idCate} - #{chartView.getCateNameByID(idCate)}] " escape="false" />
                            </ui:repeat><p/>

                            <p:outputLabel value="Groups ID: " for="listGroupsID" style="font-weight: bold;" rendered="#{chartView.typeCalculator eq 'yes'}"/>
                            <ui:repeat id="listGroupsID" var="idGroups" value="#{chartView.returnIdOfListGroupsChoose(chartView.listChooseGroups)}" varStatus="status" rendered="#{chartView.typeCalculator eq 'yes'}">
                                <h:outputText value="[#{idGroups} - #{chartView.getGroupsNameByID(idGroups)}] " escape="false"/>
                            </ui:repeat>

                            <p:outputLabel value="Groups ID: " for="listGroupsID2" style="font-weight: bold;" rendered="#{chartView.typeCalculator eq 'no'}"/>
                            <ui:repeat id="listGroupsID2" var="aGroup" value="#{chartView.allGroups}" varStatus="status" rendered="#{chartView.typeCalculator eq 'no'}">
                                <h:outputText value="[#{aGroup.groupID} - #{aGroup.groupName}] " escape="false"/>
                            </ui:repeat>
                        </p:outputPanel>

                        <p:outputPanel layout="block" style="height:700px;margin:45px;text-align: center;margin-top: 30px;">
                            <p:outputPanel id="outputChart" layout="inline" style="height:600px;margin:auto;margin-top: 60px;margin-bottom: 30px;text-align: center;">
                            </p:outputPanel>
                        </p:outputPanel>
                    </p:outputPanel>
                </p:dialog>
                <p:contextMenu for="dialogExport" >
                    <p:menuitem value="Export To New Page" onclick="printDialog()" />
                </p:contextMenu>
                <script type="text/javascript">
                    function exportChart() {
                        //export image
                        $('#formChart\\:outputChart').empty().append(PF('chart_export').exportAsImage());
                        //show the dialog
                        PF('dialogExport').show();
                    }
                    function printDialog()
                    {
                        //                    document.body.style.visibility = 'hidden';
                        //                    $('#formChart\\:allContent').css({"visibility": "visible", "width": 1500, "height": $(document).height(), "position": "fixed", "top": "0px"});


                        //                    var newWindow=window.open();
                        //                    var content=$('#formChart\\:allContent').html();
                        //                     $(newWindow.document.body).html(content);
                        //                     
                        //                     
                        {
                            var elementToCopy = $("#formChart\\:allContent");
                            var w = window.open("renderReport.xhtml", "Alviss", '');
                            var stylearray = document.defaultView.getComputedStyle(elementToCopy[0], null);
                            //                    for (var key in stylearray) {
                            //                        console.log(key + ': ' + stylearray[key]);
                            //                    }
                            var htmlData = $("#formChart\\:allContent").html();
                            w.stylearray = stylearray;
                            w.contentVar = htmlData;
                            w.init();
                        }
                    }
                    function handleMessage(data) {
                        var series = [],
                                chart = PF('outputChart').plot;

                        for (var key in data) {
                            series.push([key, data[key]]);
                        }

                        chart.series[0].data = series;
                        chart.replot();
                    }
                </script>
            </h:form>
            <br/>
            <br/>
            <br/>
            <br/>
            <br/>
        </h:body>
    </ui:define>
</ui:composition>

